00IESOFT.PDF

When to test less

00NTESTS.PDF

How many tests are enough?

00WESS.PDF

Maintaining maintainability = Recognizing reachability

00WISE.PDF

Learning to reduce risk with COCOMO-II

GORADI~1.PDF

Dynamic impact analysis: Analyzing error propagation in program executions

VOASTU~1.PDF

PISCES: A tool for predicting software testability

KHOSHT~1.PDF

Detecting program modules with low testability

VOASSS~1.PS

Software testability: An experiment in measuring simulation reusability

VOASNA~1.PS

Designing programs that do not hide data state errors during randowm black box testing

VOASJS~1.PDF

Designing programs that are less likely to hide faults

VOASIE~2.PDF

Software testability: The new verification

VOASIE~1.PDF

Predicting how badly good software can behave

VOASIC~1.PDF

Procedures for reducing the size of coverage-based test sets

THOMPSONTHESIS.PS

An investigation of fault based testing using the relay method

UM-CS-~1.PS

An informational flow model of fault detection

TSE99-~1.PDF (paper, not used) d

Empirical studies of a prediction model for regression test selection

ICSE10.PS

An empirical study of regression test selection techniques

JEFFER~1.PDF

Experiments with data flow and mutation testing

JSS99-~1.PDF

Testing evolving software

JSTVR0~1.PDF

An empirical investigation of the relationship between spectra differences and regression faults

MORELL~1.PDF

Using dynamic sensitivy analysis to assess testability

OFFUTT~1.PS.gz

Coupling based criteria for integration testing

OFFUTT~2.PS.gz

An experimental evaluation of data flow and mutation testing

OFFUTT~3.PS.gz

A semantic model of program faults

SETFTC~1.PDF

Generation of an error set that emulates software faults - based on field data

TESTIN~1.PDF

Software testing best practices

CODECO~1.HTM

Code coverage analysis

SSAUDIT.HTM

Applying Code Inspection to Spreadsheet Testing

2004-ICSE.Generating_Tests_from_Counterexamples.pdf

Generating tests from counterexamples

wasted-time-issre2003.pdf

Reducing wasted development time via continuous testing

agrawal89design.pdf

Design of mutation operators for the C programming language

cise27_99.pdf

Testing spreadsheets and other packages used in metrology: Testing the intrinsic functions of Excel

cmsc34_04.pdf

Testing the numerical correctness of software

KratkiewiczThesis.pdf

Evaluating static analysis tools for detecting buffer overflows in C code

Malaiya-etal02.pdf

Software reliability growth with test coverage

quest.pdf

Random testing of C calling conventions

cise25_99.pdf

A methodology for testing spreadsheets and other packages used in metrology

cmsc07_00.pdf

Testing functions for the calculation of standard deviation: A methodology for testing spreadsheets and other packages used in metrology

emsoft08-preprint.pdf

Volatiles Are Miscompiled, and What to Do about It

bookChapterOnSE.pdf

Model-based testing of object-oriented reactive systems with Spec Explorer

quissta08.pdf (unlthesis..., other) d

Configuration-aware regression testing: an empirical study of sampling and prioritization

unlthesis_XQu.pdf (email, cited) d

Configuration aware prioritization for regression testing

jss-kl.pdf

An empirical investigation into branch coverage for C programs using CUTE and AUSTIN

NASA-2001-tm210876 MCDC.pdf

A practical tutorial on modified condition/decision coverage

10.1.1.4.369.pdf (paper, not used) d

The exception handling effectiveness of POSIX operating systems

lindig-aadebug-2005.pdf

Find a compiler bug in 5 minutes

regtestsel-systematic.pdf

Empirical evaluation of regression test selection techniques: A systematic review

2008-12-OSDI-KLEE.pdf

KLEE: Unassisted automatic generation of high-coverage tests for complex system programs

pldi11-regehr.pdf

Finding and understanding bugs in C compilers

oomuts.pdf (not used) d

An analysis of OO mutation operators

teststoppingrule.pdf

Some conservative stopping rules for the operational testing of safety-critical software

ar01-18.pdf (paper, TODO, not used) d

An investigation of three forms of the modified condition decision coverage (MCDC) criterion

ellims_phd.pdf

The effectiveness of t-way test data generation

testcritcomp.pdf (paper, not used) d

An experimental comparison of four unit test criteria: Mutation, edge-pair, all-uses and prime path coverage

zheng-TSE-regression.pdf (not used) d

Search algorithms for regression test case prioritization

CSMR13a.doc.pdf (not used) d

A study on the relation between antipatterns and the cost of class unit testing

SERG-2011-028.pdf (not used) d

An approach for search based testing of null pointer exceptions

TSE-0172-1003-1.pdf (paper, not used) d

Software fault interactions and implications for software testing

BF03194493.pdf (paper, emailed, done) d

The marginal value of increased testing: An empirical analysis using four code coverage measures

1108.1068v2.pdf (not used) d

Stateful testing: Finding more errors in code and contracts

static-est-coverage.pdf (paper, not used) d

Static estimation of test coverage

fuzzer.pdf (done) d

Comparative language fuzz testing

3276.pdf (partial) d

Effects of negative testing on TDD: An industrial experiment

pldi12-preprint (file, not used) d

Test-case reduction for C compiler bugs

MSR-TR-2009-155.pdf

Design and testing of a CPU emulator

icse2013_.pdf (not used) d

Automatic testing of sequential and concurrent substitutability

ab_test_illusory.pdf

Most winning A/B test results are illusory

pldi13.pdf (done) d

Taming compiler fuzzers

emse-prio-05.pdf

Prioritizinf JUnit test cases: An empirical assessment and cost-benefit analysis

issta-08.pdf

Using sensitivity analysis to create simplified economic models for regression testing

fse06.pdf (not yet emailed) d

An empirical study of regression testing techniques incorporating context and lifetime factors and improved cost-benefit models

fse-08.pdf (email, cited) d

An empirical study of the benefits of time constraints on the cost-benefits of regression testing

tse10.pdf (not yet emailed, fse-08..., other) d

The effects of time constraints on test case prioritization: A series of controlled experiments

issre11.pdf (paper, not used) d

Adaptive regression testing strategies: An empirical study

fse13a.pdf (partial) d

Dynodroid: An input generation system for android apps

test-independence-2014.pdf (not used) d

Empirically Revisiting the Test Independence Assumption

FaultsFoundByRandomTesting.pdf (cited) d

On the number and nature of faults found by random testing

icse14_cov.pdf (done) d

Code Coverage for Suite Evaluation by Developer

gopinath2014mutations.pdf (cited) d

Mutations: How close are they to real faults?

icse15-fperror.pdf (not used) d

A Genetic Algorithm for Detecting Significant Floating-Point Inaccuracies

qsic2014_cameraready.pdf (not used) d

Empirically Evaluating the Quality of Automatically Generated and Manually Written Test Suites

coverage_appendix.pdf coverage_paper.pdf (done) d

Coverage Is Not Strongly Correlated with Test Suite Effectiveness

apd-thesisbody.pdf (paper+file, not used) d

Investigating effective inspection of object-oriented code

defects4j_issta_2014.pdf (not used) d

Defects4J: A Database of Existing Faults to Enable Controlled Testing Studies for Java Programs

1104.1114.pdf (paper, not used) d

An earned value approach to assess and monitor software project uncertainty: A case study in software test execution

icse2014_a.pdf (not used) d

Interpolated N-Grams for Model Based Testing

1408-RS-repir.pdf (not used) d

REPiR: An Information Retrieval based Approach for Regression Test Prioritization

hussain14rugrat.pdf (not used) d

RUGRAT: Evaluating Program Analysis and Testing Tools and Compilers with Large Generated Random Benchmark Applications†

FSE2014-Khalid.pdf (refed) d

Prioritizing The Devices To Test Your App On: A Case Study Of Android Game Apps

Testdroid_Research_Status_Android.pdf (paper, not used) d

The status of android hardware and software the application developers point of view

Yang_PhD.pdf

RANDOM TESTING OF OPEN SOURCE C COMPILERS

icse2015seip-foo.pdf (not used) d

An Industrial Case Study on the Automated Detection of Performance Regressions in Heterogeneous Environments

TR63P.pdf (paper, not used) d

An Experimental Approach to Statistical Mutation-Based Testing

YangChen-PhD.pdf (pldi13..., other) d

IMPROVING THE UTILITY OF COMPILER FUZZERS

verificarlo-preprint.pdf

Verificarlo: checking floating point accuracy through Monte Carlo Arithmetic

ieee_conf.pdf (not used) d

Do Mutation Reduction Strategies Matter?

TUD-SERG-2010-035.pdf (cited) d

Studying the co-evolution of production and test code in open source and industrial developer test processes through repository mining

Thomas_EMSE_2012.pdf (not used) d

Static test case prioritization using topic models

REPiR-ICSE2015.pdf (not used) d

An Information Retrieval Approach for Regression Test Prioritization Based on Program Changes

MINH_LE-PhD.pdf

Program Synthesis for Empowering End Users and Stress-Testing Compilers

fse15.pdf (not used) d

Assertions Are Strongly Correlated with Test Suite Effectiveness

gao-icse15.pdf (not used) d

Making System User Interactive Tests Repeatable: {When} and What Should we Control?

gopinath2015howhard.pdf (cited) d

How Hard Does Mutation Analysis Have to Be, Anyway?

gopinath2016on.pdf (not used) d

On The Limits Of Mutation Reduction Strategies

ICSE15B.pdf (not used) d

Trivial Compiler Equivalence: A Large Scale Empirical Study of a Simple, Fast and Effective Equivalent Mutant Detection Technique

dalal1994.pdf (paper, file, not used) d

When to Stop Testing for Large Software Systems with Changing Code

dalal1988.pdf

When Should One Stop Testing Software?

ICSE16_a.pdf (not used) d

An Empirical Comparison of Compiler Testing Techniques
∗
102-ridge-online.pdf (emailed, lost data) d

SibylFS: formal specification and oracle-based testing for POSIX and real-world file systems

bstj49-10-2975.pdf (paper, not used) d

System testing and early field operation experience

1509.00144.pdf (not used) d

Automatic Software Diversity in the Light of Test Suites

50871051.pdf (paper, cited) d

Experiences in building and using compiler validation systems

IST.pdf (not used) d

Towards an Operationalization of Test-driven Development Skills: An Industrial Empirical Study

J34.pdf (paper, not used) d

Comparing the effectiveness of software testing strategies

a168738.pdf (paper, not used) d

Evaluations of Software Technologies: Testing, CLEANROOM, and Metrics

Dyn_model_system_testing.pdf (paper+file, done) d

Dynamic model for the system testing process

IsProofMoreEffectiveThanTesting.pdf (paper, not used) d

Is Proof More Cost-Effective Than Testing?

peerj-preprints-1984.pdf

Oops, My Tests Broke the Build: An Analysis of Travis CI Builds with GitHub

ahmed2016can.pdf (not used) d

Can Testedness be Effectively Measured?

1708.03240.pdf (not used) d

Test Case Prioritization Techniques for Model-Based Testing: A Replicated Study

fuzzingModel.pdf (partial) d

Empirical Analysis and Modeling of Black-Box Mutational Fuzzing

euclid.aoap.117700.pdf

Buying with exact confidence

ADA230461.pdf

AUTOMATIC DETERMINATION OF RECOMTMENDED TEST COMBINATlINS FOR ADA COMPILERS

fse_2017_labuschange.pdf (not used) d

Measuring the Cost of Regression Testing in Practice: A Study of Java Projects using Continuous Integration

Impact_Coverage_Bug_Density.pdf (emailed) d

The Impact of Coverage on Bug Density in a Large Industrial Software Project

ICST16a.pdf (not used) d

Empirical Evaluation of Test Coverage for Functional Programs

e8a0827fb4713b48.pdf

An Empirical Study on the Scalability of Selective Mutation Testing

oopsla16.pdf

Finding Compiler Bugs via Live Code Mutation

FucciEtAl_ESEM2016.pdf (email???, students, faded away) d

An External Replication on the Effects of Test- driven Development Using a Multi-site Blind Analysis Approach

ICSE16Prior.pdf (not used) d

How Does Regression Test Prioritization Perform in Real-World Software Evolution?

ICSE17b.pdf (not used) d

Learning to Prioritize Test Programs for Compiler Testing

isstaws16intuitestmain2.pdf (not used) d

Automated Mobile UI Test Fragility: An Exploratory Assessment Study on Android

2012_004_001_28152.pdf

Probability-Based Parameter Selection for Black-Box Fuzz Testing

d6c791dd0c5d244c.pdf

Combinatorial Testing: Theory and Practice

1803.02130.pdf

STADS: Software Testing as Species Discovery

paper7.pdf (emailed, faded away) d

Code Coverage Analysis of Combinatorial Testing

Coverage-CombinatorialTest.pdf (email, received, done) d

On Use of Coverage Metrics in Assessing Effectiveness of Combinatorial Test Designs

nistspecialpublication800-142.pdf

PRACTICAL COMBINATORIAL TESTING

Nie-CombinatorialTesting.pdf

A Survey of Combinatorial Testing

mutation-effective-fse2014.pdf

Are Mutants a Valid Substitute for Real Faults in Software Testing?

775ac2_ddd93fa3b0ff442.pdf (not used) d

TESTING AND DEBUGGING: A REALITY CHECK

78a35ffd1571c707368.pdf (paper, subset of fault-profile, other) d

Estimating t-way Fault Profile Evolution During Testing

fault-profile-iwct17.pdf (paper, done) d

A Model for t-way Fault Profile Evolution During Testing

teasley1994.pdf

Why Software Testing Is Sometimes Ineffective: Two Applied Studies of Positive Test Strategy

9310b69ceaf99e3b6e80.pdf (not used) d

Redefining and Evaluating Coverage Criteria Based on the Testing Scope

10.1.1.678.7132.pdf (sf110methods.csv, emailed) d

A Large Scale Evaluation of Automated Unit Test Generation Using EvoSuite

775ac2_17b6a3bbcefd44.pdf (not used) d

Understanding the Test Automation Culture of App Developers

Z83.pdf

Testing for Perturbations of Program Statements

Z84.pdf

PERTURBATION TESTING FOR COMPUTATION ERRORS

Z89.pdf

Perturbation Techniques for Detecting Domain Errors

45861.pdf (not used) d

Taming Google-Scale Continuous Testing

coverage.pdf (not used) d

Code Coverage and Postrelease Defects: A Large-Scale Study on Open Source Projects

Halin-MSc.pdf (not used) d

Sampling & Testing all configurations: The JHipster case study

petersen2008.pdf (emailed) d

The Impact of Time Controlled Reading on Software Inspection Effectiveness and Efficiency A Controlled Experiment

Coverage_icst2017.pdf

Coverage-Based Reduction of Test Execution Time: Lessons from a Very Large Industrial Project

paperwfonts.pdf (not used) d

Search-Based Test Data Generation for SQL Queries

ICST_2017_paper_48.pdf (not used) d

Automata Language Equivalence vs. Simulations for Model-based Mutant Equivalence: An Empirical Evaluation

TR-09-06.pdf

An Analysis and Survey of the Development of Mutation Testing

1811.08330.pdf (not used) d

Automatic Test Improvement with DSpot: a Study with Ten Mature Open-Source Projects

ASE'16-TestSmells.pdf (not used) d

An Empirical Investigation into the Nature of Test Smells

HiltonETAL18TestCovEvo.pdf (not used) d

A Large-Scale Study of Test Coverage Evolution

coverage_a.pdf

Test Coverage and Post-Verification Defects: A Multiple Case Study

journal.pone.0181524.pdf (paper, cited) d

A testing-coverage software reliability model considering fault removal efficiency and error generation

trautsch2017.pdf (not used) d

Are there any Unit Tests?  An Empirical Study on Unit Testing in Open Source Python Projects

J8.pdf (not used) d

Branch Coverage Prediction in Automated Testing

1906.11015.pdf (paper, cited) d

Comparing Popularity of Testing Careers among Canadian, Chinese, Indian Students

1812.05172.pdf

Analyzing Popularity of Software Testing Careers in Canada

Factorscareersofttest.pdf

FACTORS INFLUENCING THE CHOICE OF A CAREER IN SOFTWARE TESTING AMONG NORWEGIAN STUDENTS

1711.07890.pdf

Would You Like to Motivate Software Testers?  Ask Them How

1802.08547v2.pdf (paper, not used) d

SmartUnit: Empirical Evaluations for Automated Unit Testing of Embedded Software in Industry

1901.03865.pdf

An Experience Report On Applying Software Testing Academic Results In Industry: We Need Usable Automated Test Generation

elmendorf1969.pdf

Controlling the Functional Testing of an Operating System

a040676.pdf

FEDERAL COBOL COMPILER TESTING SERVICE

09-turing_earlyproof.pdf

An Early Program Proof by Alan Turing

thesis_natella.pdf

ACHIEVING REPRESENTATIVE FAULTLOADS IN SOFTWARE FAULT INJECTION

CS-TR-4476.pdf

THE IMPACT OF BACKGROUND AND EXPERIENCE ON SOFTWARE INSPECTIONS.

19fitness.pdf (cited) d

Choosing The Fitness Function for the Job: Automated Generation of Test Suites that Detect Real Faults

issta13.pdf (not used) d

Threats to the Validity and Value of Empirical Assessments of the Accuracy of Coverage-Based Fault Locators

Daka-PhD.pdf

Improving Readability in Automatic Unit Test Generation

1908.06502.pdf (not used) d

Incorporating fault-proneness estimations into coverage-based test case prioritization methods

1812.07525.pdf (cited) d

Inputs from Hell Generating Uncommon Inputs from Common Samples

ICSE_2019.pdf (not used) d

Scalable Approaches for Test Suite Reduction

16mcdc.pdf

The Effect of Program and Model Structure on the Effectiveness of MC/DC Test Adequacy Coverage

main_1.pdf (not used) d

Test-Driven Code Review: An Empirical Study

1706.01636.pdf (cited) d

Can Pairwise Testing Perform Comparably to Manually Handcrafted Testing Carried Out by Industrial Engineers?

asej18.pdf (not used) d

How Verified (or Tested) is My Code?  Falsification-Driven Verification and Testing

ICSE_2018.pdf (not used) d

FAST Approaches to Scalable Similarity-based Test Case Prioritization

1905.07019.pdf (not used) d

TERMINATOR: Better AutomatedUI Test Case Prioritization

costben-trade-reg-testing.pdf

Modeling the Cost-Benefits Tradeoffs for Regression Testing Techniques

survey.pdf

Mutation Testing Advances: An Analysis and Survey

ICST16.pdf (not used) d

Empirical Evaluation of Test Coverage for Functional Programs

ICST19.pdf (not used) d

Do Pseudo Test Suites Lead to Inflated Correlation in Measuring Test Effectiveness?

pldi17.pdf

Skeletal Program Enumeration for Rigorous Compiler Testing

1911.07707.pdf

Building Fast Fuzzers

1912.05937.pdf

Inferring Input Grammars from Dynamic Control Flow

sec19fall_jung_prepub.pdf

FUZZIFICATION : Anti-Fuzzing Techniques

fse2018.pdf (website+email, done) d

How Well Are Regular Expressions Tested in the Wild?

gopinath2017on.pdf (paper, cited) d

On the Limits of Mutation Analysis

10-1007@978-3-642.pdf (email, 847d0b43f40ee515f5e, other) d

Performance Regression Unit Testing: A Case Study

847d0b43f40ee515f5e.pdf (other) d

SPL: Unit Testing Performance

Horky_Phd.pdf (847d0b43f40ee515f5e, done) d

Performance Awareness in Agile Software Development

knuth-analysis.pdf

On the use of software artifacts to evaluate the effectiveness of mutation analysis for detecting errors in production software

ICSE2019_difftest_cover.pdf

Hunting for Bugs in Code Coverage Tools via Randomized Differential Testing

OOPSLA.pdf (done) d

Compiler Fuzzing: How Much Does It Matter?

de-Campos_PhD.pdf

Search-based Unit Test Generation for Evolving Software

2004.04206.pdf (not used) d

C++11/14 Mutation Operators Based on Common Fault Patterns

2004.04211.pdf (not used) d

Do Null-Type Mutation Operators Help Prevent Null-Type Faults?

08405609.pdf (not used) d

An Empirical Comparison of Combinatorial Testing, Random Testing and Adaptive Random Testing

n3112.pdf

Technology- Test Methods Specifications for Measuring Conformance to POSIX - Part 1: System Application Program Interface (API) - Amendment 1: Realtime Extension [C Language]

2006.06327.pdf

The development and deployment of formal methods in the UK

nistir5998.pdf

User's Guide for the SQL Test Suite, Version 6.0

1500412.1500463.pdf

Compiler validation—An assessment

19870016346.pdf (paper, not used) d

ANALYZING THE TEST PROCESS USING STRUCTURAL COVERAGE

tosem20.pdf (not used) d

Using Relative Lines of Code to Guide Automated Test Generation for Python

00624271.pdf (paper, not used) d

A coverage analysis tool for the effectiveness of software testing

Biblography 2.pdf

Applicability of modified condition/decision coverage to software testing

TestThemAllIsItWorthIt.pdf (not used) d

Test them all, is it worth it? Assessing configuration sampling on the JHipster Web development stack

2006.07633.pdf (not used) d

Will Dependency Conflicts Affect My Program’s Semantics?

FSE20.EmpiricalLaw.pdf (not used) d

Fuzzing: On the Exponential Costof Vulnerability Discovery

CSUR20.pdf

A Survey of Compiler Testing

2011.11942.pdf (not used) d

A Family of Experiments on Test-Driven Development

C48.pdf (not used) d

How the Experience of Development Teams Relates to Assertion Density of Test Classes

